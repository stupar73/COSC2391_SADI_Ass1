package model.interfaces;

/**
 * Assignment interface for SADI representing the player
 * 
 * @author Caspar Ryan
 * 
 */
public interface Player
{
	/**
	 * @return human readable player name
	 */
	public abstract String getPlayerName();

	/**
	 * @param playerName
	 *            human readable player name
	 */
	public abstract void setPlayerName(String playerName);

	/**
	 * 
	 * @return number of points from setPoints()
	 */
	public abstract int getPoints();

	/**
	 * @param points
	 *            for betting (updated with each win or loss)
	 */
	public abstract void setPoints(int points);

	/**
	 * @return the player ID which is generated by the implementing class
	 */
	public abstract String getPlayerId();

	/**
	 * 
	 * @param number
	 *            - the "lucky" number on the wheel the player is betting on
	 * @param bet
	 *            - the bet in points
	 * @return true if the player had sufficient points and the bet was placed
	 */
	public abstract boolean placeBet(int number, int bet);

	/**
	 * @return the bet as set with placeBet()
	 */
	public abstract int getBet();

	/**
	 * called from GameEngine.calculateResult() to reset the bet to 0 for next
	 * round (in case player does not bet)
	 */
	public abstract void resetBet();

	/**
	 * @return the "lucky" number the user bet on
	 * 
	 * @see model.interfaces.GameEngineCallback
	 */
	public abstract int getNumber();

	/**
	 * 
	 * @return a human readable String that lists the attributes of this Player
	 *         instance for debugging or console display
	 */
	public abstract String toString();
}
